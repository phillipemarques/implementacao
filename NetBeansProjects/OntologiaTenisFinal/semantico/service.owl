<?xml version="1.0" encoding="UTF-8"?>

<!--
  This document uses entities as abbreviations for URIs.
  For a version with entity references expanded, load the source into 
  Internet Explorer.
  -->
<!DOCTYPE uridef [
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns">
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema">
  <!ENTITY owl "http://www.w3.org/2002/07/owl">
  <!ENTITY service "http://localhost:8084/OntologiaTenisFinal/webresources/semantic/_Service.owl">
  <!ENTITY DEFAULT "http://localhost:8084/OntologiaTenisFinal/webresources/semantic/_Service.owl">
  <!ENTITY THIS "http://localhost:8084/OntologiaTenisFinal/webresources/semantic/_Service.owl">
]>

<rdf:RDF
  xmlns:rdf =  "&rdf;#"
  xmlns:rdfs = "&rdfs;#"
  xmlns:owl = "&owl;#"
  xmlns =      "&service;#"
  xml:base="&service;">

  <owl:Ontology rdf:about="">
    <owl:versionInfo>Version 1.0</owl:versionInfo>
    <rdfs:comment> Top level of OWL ontology for services.
    Part of the OWL-S ontology; see http://www.daml.org/services/. </rdfs:comment>
    <owl:imports rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns"/>
    <owl:imports rdf:resource="http://jamsci.servehttp.com/owlsedit/owl.rdf"/>
    <owl:imports rdf:resource="http://jamsci.servehttp.com/owlsedit/rdf-schema.rdf"/>
    <owl:imports rdf:resource="http://staff.um.edu.mt/cabe2/supervising/undergraduate/owlseditFYP/owls11/Service.owl"/>
  </owl:Ontology>

<!-- Service -->

<owl:Class rdf:ID="#Service">
  <rdfs:label>Service</rdfs:label>
  <rdfs:comment>Servi√ßos</rdfs:comment>
</owl:Class>

<!-- Service Profile -->

<owl:Class rdf:ID="ServiceProfile">
  <rdfs:label>ServiceProfile</rdfs:label>
  <rdfs:comment>Profile Ontologia Tenis</rdfs:comment>
</owl:Class>

<!-- Service Model -->

<owl:Class rdf:ID="ServiceModel">
  <rdfs:label>ServiceModel</rdfs:label>
  <rdfs:comment>Model Ontologia Tenis</rdfs:comment>
</owl:Class>

<!-- Service Grounding -->

<owl:Class rdf:ID="ServiceGrounding">
  <rdfs:label>ServiceGrounding</rdfs:label>
  <rdfs:comment>Grounding Ontologia Tenis</rdfs:comment>
</owl:Class>

<!--  Presenting a profile    -->

<owl:ObjectProperty rdf:ID="presents">
  <rdfs:comment> 
    There are no cardinality restrictions on this property. 
  </rdfs:comment>
  <rdfs:domain rdf:resource="&service;#Service"/>
  <rdfs:range rdf:resource="&service;#ServiceProfile"/>
  <owl:inverseOf rdf:resource="&service;#presentedBy"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:ID="presentedBy">
  <rdfs:comment> 
    There are no cardinality restrictions on this property. 
  </rdfs:comment>
  <rdfs:domain rdf:resource="&service;#ServiceProfile"/>
  <rdfs:range rdf:resource="&service;#Service"/>
  <owl:inverseOf rdf:resource="&service;#presents"/>
</owl:ObjectProperty>

<!--   Being described by a model -->

<owl:ObjectProperty rdf:ID="describedBy">
  <rdfs:domain rdf:resource="&service;#Service"/>
  <rdfs:range rdf:resource="&service;#ServiceModel"/>
  <owl:inverseOf rdf:resource="&service;#describes"/>
</owl:ObjectProperty>

<owl:Class rdf:about="#Service">
  <rdfs:comment> 
    A service has 0 or 1 models.  (But note that a service with 0 models 
    does not provide automated online access; it exists only for
    discovery purposes; that is, it exists so as to provide a Profile.)
  </rdfs:comment>
  <rdfs:subClassOf>
    <owl:Restriction owl:maxCardinality="1">
      <owl:onProperty rdf:resource="#describedBy"/>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>

<owl:ObjectProperty rdf:ID="describes">
  <rdfs:comment> 
    There are no cardinality restrictions on this property. That is,
    the same service model can be used by many different services.
  </rdfs:comment>
  <rdfs:domain rdf:resource="&service;#ServiceModel"/>
  <rdfs:range rdf:resource="&service;#Service"/>
  <owl:inverseOf rdf:resource="&service;#describedBy"/>
</owl:ObjectProperty>

<!--
  Supporting a grounding

  Every service model must be grounded in order to be usable, and
  there may be multiple groundings for a given model.
  But the relationship between a service model and a grounding
  is not expressed directly.  It is expressed indirectly via the
  "supports" property of the Service.  This allows the service model
  to be expressed independently of any particular grounding.
  -->

<owl:ObjectProperty rdf:ID="supports">
  <rdfs:domain rdf:resource="&service;#Service"/>
  <rdfs:range rdf:resource="&service;#ServiceGrounding"/>
  <owl:inverseOf rdf:resource="&service;#supportedBy"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:ID="supportedBy">
  <rdfs:domain rdf:resource="&service;#ServiceGrounding"/>
  <rdfs:range rdf:resource="&service;#Service"/>
  <owl:inverseOf rdf:resource="&service;#supports"/>
</owl:ObjectProperty>

<owl:Class rdf:about="#ServiceGrounding">
  <rdfs:comment> 
    A Grounding must be associated with exactly one service.
    (Also, that service must have a model - but that constraint
    isn't expressed here.)
  </rdfs:comment>
  <rdfs:subClassOf>
    <owl:Restriction owl:cardinality="1">
      <owl:onProperty rdf:resource="#supportedBy"/>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>



<!--  Providing a service   -->

<owl:ObjectProperty rdf:ID="provides">
  <rdfs:comment>
    OWL-S is completely agnostic at present about what kind of thing
    provides a service (hence, no domain declared here).
  </rdfs:comment>
  <rdfs:range rdf:resource="&service;#Service"/>
  <owl:inverseOf rdf:resource="&service;#providedBy"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:ID="providedBy">
<!--BJP: This follows from the inversity, why not leave it out? Two definitions of the 
same thing...more chances for error. OTOH, leaving them in is harmless and likely to be
picked up by dumber (e.g., non-inverse aware) tools.-->
  <rdfs:domain rdf:resource="&service;#Service"/>
  <owl:inverseOf rdf:resource="&service;#provides"/>
</owl:ObjectProperty>


</rdf:RDF>
